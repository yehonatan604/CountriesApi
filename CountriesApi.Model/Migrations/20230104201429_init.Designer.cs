// <auto-generated />
using CountriesApi.Model.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CountriesApi.Model.Migrations
{
    [DbContext(typeof(CountriesDbContext))]
    [Migration("20230104201429_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CountriesApi.Model.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 2,
                            Name = "Tel-Aviv"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Kingston"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Haifa"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 3,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Name = "Ramat-Gan"
                        });
                });

            modelBuilder.Entity("CountriesApi.Model.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Jamaica",
                            ShortName = "JM"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Israel",
                            ShortName = "IL"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "France",
                            ShortName = "FR"
                        });
                });

            modelBuilder.Entity("CountriesApi.Model.Models.City", b =>
                {
                    b.HasOne("CountriesApi.Model.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CountriesApi.Model.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
